project(adlib-benchmarks)

macro(add_standalone NAME)
  add_executable(${NAME} ${NAME}.c ${ARGN})
  target_link_libraries(${NAME} ad-static)
endmacro()

add_standalone(array_benchmark)
add_standalone(btree_map_benchmark)
add_standalone(btree_set_benchmark)
add_standalone(charconv_benchmark)
add_standalone(hash_benchmark)
add_standalone(hash_comparison)
add_standalone(hashtable_benchmark)
add_standalone(heap_benchmark)
add_standalone(random_benchmark)

include(FindPkgConfig)
if(${PKG_CONFIG_FOUND})
  pkg_check_modules(XXHASH libxxhash>=0.8.0)
  if(${XXHASH_FOUND})
    target_include_directories(hash_comparison PRIVATE ${XXHASH_INCLUDE_DIRS})
    target_link_libraries(hash_comparison ${XXHASH_LIBRARIES})
    target_compile_definitions(hash_comparison PRIVATE HAVE_XXHASH)
  endif()
  pkg_check_modules(GCRYPT libgcrypt>=1.10)
  if(${GCRYPT_FOUND})
    target_include_directories(hash_comparison PRIVATE ${GCRYPT_INCLUDE_DIRS})
    target_link_libraries(hash_comparison ${GCRYPT_LIBRARIES})
    target_compile_definitions(hash_comparison PRIVATE HAVE_GCRYPT)
  endif()
  pkg_check_modules(GNUTLS gnutls>=3.8)
  if(${GNUTLS_FOUND})
    target_include_directories(hash_comparison PRIVATE ${GNUTLS_INCLUDE_DIRS})
    target_link_libraries(hash_comparison ${GNUTLS_LIBRARIES})
    target_compile_definitions(hash_comparison PRIVATE HAVE_GNUTLS)
  endif()
endif()
