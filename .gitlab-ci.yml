stages:
  - build
  - test

default:
  # Cancel jobs if newer commits are pushed to the branch
  interruptible: true
  image: "registry.gitlab.com/gwastar/adlib"

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_PROTECTED == "true"

.expensive-job:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      allow_failure: false
    - when: manual
      allow_failure: true

.use-ccache:
  variables:
    CCACHE_BASEDIR: "$CI_PROJECT_DIR"
    CCACHE_DIR: "$CI_PROJECT_DIR/_ccache"
    CMAKE_C_COMPILER_LAUNCHER: "ccache"
  before_script:
    - export PATH="/usr/lib/ccache:$PATH"
    - ccache --zero-stats || true
    - ccache --show-stats || true
  after_script:
    - ccache --show-stats
  cache:
    - key: ccache-$CI_JOB_NAME
      paths:
        - $CCACHE_DIR

.build-meson:
  extends: .use-ccache
  stage: build
  artifacts:
    paths:
      - "${CI_PROJECT_DIR}/_${CI_JOB_NAME_SLUG}/tests/tests"
    expire_in: 1 week
  variables:
    MESON_COMMON_FLAGS: "-Dc_args=-Werror"
  script:
    - meson setup ${MESON_COMMON_FLAGS} ${MESON_FLAGS} _${CI_JOB_NAME_SLUG}
    - meson compile -C _${CI_JOB_NAME_SLUG}

.build-cmake:
  extends: .use-ccache
  stage: build
  artifacts: !reference [.build-meson, artifacts]
  variables:
    CMAKE_COMMON_FLAGS: "-GNinja"
  script:
    - cmake ${CMAKE_COMMON_FLAGS} ${CMAKE_FLAGS} -B _${CI_JOB_NAME_SLUG}
    - cmake --build _${CI_JOB_NAME_SLUG}

.use-clang:
  variables:
    CC: "ccache clang"
    CC_LD: "lld"

build-gcc-release:
  extends: .build-meson
  variables:
    MESON_FLAGS: "-Dbuildtype=release"

build-gcc-debug:
  extends:
    - .build-meson
    - .expensive-job
  variables:
    MESON_FLAGS: "-Dbuildtype=debug -Dsingle-tests=true"

build-clang-release:
  extends:
    - .build-meson
    - .use-clang
    - .expensive-job
  variables:
    MESON_FLAGS: "-Dbuildtype=release"

build-asan-ubsan:
  extends:
    - .build-meson
    - .use-clang
    - .expensive-job
  variables:
    MESON_FLAGS: "-Dbuildtype=debugoptimized -Db_sanitize=address,undefined -Db_lundef=false"

# build-msan:
#   extends:
#     - .build-meson
#     - .use-clang
#     - .expensive-job
#   variables:
#     MESON_FLAGS: "-Dbuildtype=debugoptimized -Db_sanitize=memory -Db_lundef=false"

build-cmake-gcc-release:
  extends:
    - .build-cmake
    - .expensive-job
  variables:
    CMAKE_FLAGS: "-DCMAKE_BUILD_TYPE=Release"

.test:
  stage: test
  script:
    - "_${CI_JOB_NAME_SLUG/test/build}/tests/tests"

test-gcc-release:
  extends: .test
  needs: [build-gcc-release]

test-gcc-debug:
  extends:
    - .test
    - .expensive-job
  needs: [build-gcc-debug]

test-clang-release:
  extends:
    - .test
    - .expensive-job
  needs: [build-clang-release]

test-asan-ubsan:
  extends:
    - .test
    - .expensive-job
  needs: [build-asan-ubsan]

# test-msan:
#   extends:
#     - .test
#     - .expensive-job
#   needs: [build-msan]